!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.VueSvgInlinePlugin=e():t.VueSvgInlinePlugin=e()}(window,(function(){return function(t){var e={};function r(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)r.d(n,i,function(e){return t[e]}.bind(null,i));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="/",r(r.s=0)}([function(t,e,r){"use strict";r.r(e);
/**
 * @author Oliver Findl
 * @version 1.0.0
 * @license MIT
 */
const n="vue-svg-inline-plugin";const i={directives:{inline:"v-svg-inline",inlineSprite:"v-svg-inline-sprite"},attributes:{merge:["class","style"],add:[{name:"focusable",value:!1},{name:"role",value:"presentation"},{name:"tabindex",value:-1}],data:[],remove:["alt","src","data-src"]},xhtml:!1},o=`${n}-flags`,s=`${n}-sprite`,a=`${s}-container`,d=/.+\.svg(?:[?#].*)?$/i,u=/<svg(\s+[^>]+)?>([\s\S]+)<\/svg>/i,c=/\s*([:@]?[^\s=]+)[\s=]+(?:"([^"]*)"|'([^']*)')?\s*/g,l=/^[:@]?[a-z](?:[a-z0-9-:]*[a-z0-9])?$/i,f=/^v-/i,p=/\s+/g,g=/[\n\t]+/g,w=new Set([200,304]);e.default={install:(t=null,e={})=>{for(const t of["directives","attributes"])e[t]=Object.assign({},i[t],e[t]||{});e=Object.assign({},i,e);for(const t in e.directives){if(e.directives[t]=e.directives[t].toString().trim().toLowerCase(),!l.test(e.directives[t]))throw new TypeError(`[${n}] Option is not valid! [options.directives.${t}="${e.directives[t]}"]`);e.directives[t]=e.directives[t].replace(f,"")}for(const t in e.attributes){if(!Array.isArray(e.attributes[t]))throw new TypeError(`[${n}] Option is not valid! [options.attributes.${t}=${JSON.stringify(e.attributes[t])}]`);e.attributes[t]="add"===t?e.attributes[t].map(t=>({name:t.name.toString().trim().toLowerCase(),value:t.value.toString().trim()})):e.attributes[t].map(t=>t.toString().trim().toLowerCase()),e.attributes[t]=new Set(e.attributes[t])}if(e.xhtml=!!e.xhtml,e._fetch="fetch"in window,e._axios="axios"in window,!e._fetch&&!e._axios)throw new Error(`[${n}] Feature is not supported by browser! [fetch || axios]`);e._observer="IntersectionObserver"in window,e._observer||console.error(`[${n}] Feature is not supported by browser! Disabling lazy processing of image nodes. [IntersectionObserver]`);const r=new Map,h=new Set;let m;const v=()=>m||(m=(()=>{if(!e._observer)throw new Error(`[${n}] Feature is not supported by browser! [IntersectionObserver]`);if(m)throw new Error(`[${n}] Can not create image node intersection observer, intersection observer already exists!`);return new IntersectionObserver((t,e)=>{for(const r of t){if(!r.isIntersecting)continue;const t=r.target;S(t),e.unobserve(t)}})})());let b;const $=()=>b||(b=(()=>{if(b)throw new Error(`[${n}] Can not create SVG symbol container node, container node already exists!`);const t=y(`<svg xmlns="http://www.w3.org/2000/svg" id="${a}" style="display: none !important;"></svg>`);return document.body.appendChild(t),document.getElementById(a)})()),y=(t="")=>{if(!t)throw new Error(`[${n}] Missing required argument! [string]`);if(!(t=t.toString().trim()).startsWith("<")||!t.endsWith(">"))throw new TypeError(`[${n}] Argument is not valid! [string="${t}"]`);return t=t.replace(g,""),document.createRange().createContextualFragment(t)},x=(t="")=>{if(!t)throw new Error(`[${n}] Missing required argument! [string]`);t=t.toString().trim();const r=new Map;let i;for(c.lastIndex=0;i=c.exec(t);){i.index===c.lastIndex&&c.lastIndex++;const t=(i[1]||"").trim().toLowerCase();if(!t||t.startsWith("<")||t.endsWith(">"))continue;if(!l.test(t))throw new TypeError(`[${n}] Attribute name is not valid! [attribute="${t}"]`);const o=(i[2]||i[3]||"").trim();r.set(t,o||(e.xhtml?t:""))}return r},S=(t=null)=>{if(!t)throw new Error(`[${n}] Missing required argument! [node]`);if(!t.dataset.src&&!t.src)throw new Error(`[${n}] Missing required argument property! [node.data-src || node.src]`);t.dataset.src&&(t.dataset.src=t.dataset.src.toString().trim()),t.src&&(t.src=t.src.toString().trim()),((t="")=>{if(!e._fetch&&!e._axios)throw new Error(`[${n}] Feature is not supported by browser! [fetch || axios]`);if(!t)throw new Error(`[${n}] Missing required argument! [path]`);if(t=t.toString().trim(),!d.test(t))throw new TypeError(`[${n}] Argument is not valid! [path="${t}"]`);return new Promise((n,i)=>{const o={path:t};if(r.has(o.path))return o.content=r.get(o.path),n(o);(e._axios?axios.get:fetch).bind(window)(o.path).then(t=>{if(!w.has(0|t.status))throw new Error(`Wrong response status! [response.status=${t.status}]`);return e._axios?t.data.toString():t.text()}).then(t=>(o.content=t.trim(),r.set(o.path,o.content),n(o))).catch(i)})})(t.dataset.src||t.src).then(r=>{const i=((t=null,r=null)=>{if(!t)throw new Error(`[${n}] Missing required argument! [file]`);if(!r)throw new Error(`[${n}] Missing required argument! [node]`);if(!t.path)throw new Error(`[${n}] Missing required argument property! [file.path]`);if(t.path=t.path.toString().trim(),!d.test(t.path))throw new TypeError(`[${n}] Argument property is not valid! [file.path="${t.path}"]`);if(!t.content)throw new Error(`[${n}] Missing required argument property! [file.content]`);if(t.content=t.content.toString().trim(),!u.test(t.content))throw new TypeError(`[${n}] Argument property is not valid! [file.content="${t.content}"]`);if(!r.outerHTML)throw new Error(`[${n}] Missing required argument property! [node.outerHTML]`);return r[o].has("sprite")&&(t.content=t.content.replace(u,(e,r,n)=>{const i=h.has(t.path),o=`${s}-${i?[...h].indexOf(t.path):h.size}`;if(!i){const e=y(`<svg xmlns="http://www.w3.org/2000/svg"><symbol id="${o}"${r}>${n}</symbol></svg>`);$().appendChild(e.firstChild.firstChild),h.add(t.path)}return`<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><use xlink:href="#${o}" href="#${o}"></use></svg>`})),t.content.replace(u,(t,i,o)=>{const s=r.outerHTML.toString().trim(),a=x(i),d=x(s);i=new Map([...a,...d]);const u=new Set(["class"]);for(const t of e.attributes.merge){const r=a.has(t)?a.get(t).split(p).filter(t=>!!t):[],n=d.has(t)?d.get(t).split(p).filter(t=>!!t):[];if(e.xhtml&&!r.length&&!n.length)continue;const o=[...r,...n];i.set(t,(u.has(t)?[...new Set(o)]:o).join(" ").trim())}for(const t of e.attributes.add){let r=t.value.split(p).filter(t=>!!t);if(i.has(t.name)){if(!e.attributes.merge.has(t.name))throw new Error(`[${n}] Can not add attribute, attribute already exists. [${t.name}]`);const o=i.get(t.name).split(p).filter(t=>!!t);if(e.xhtml&&!r.length&&!o.length)continue;r=[...o,...r]}i.set(t.name,(u.has(t.name)?[...new Set(r)]:r).join(" ").trim())}for(const t of e.attributes.data){if(!i.has(t))continue;let r=i.get(t).split(p).filter(t=>!!t);const o=`data-${t}`;if(i.has(o)){if(!e.attributes.merge.has(o))throw new Error(`[${n}] Can not transform attribute to data-attribute, data-attribute already exists. [${t}]`);const s=i.get(o).split(p).filter(t=>!!t);if(e.xhtml&&!r.length&&!s.length)continue;r=[...s,...r]}i.set(o,(u.has(t)?[...new Set(r)]:r).join(" ").trim()),e.attributes.remove.has(t)||e.attributes.remove.add(t)}for(const t of e.attributes.remove)i.has(t)&&i.delete(t);return`<svg${i.size?` ${[...i.keys()].filter(t=>!!t).map(t=>`${t}="${i.get(t)}"`).join(" ")}`:""}>${o}</svg>`})})(r,t),a=y(i);((t=null,e=null)=>{if(!t)throw new Error(`[${n}] Missing required argument! [node]`);if(!e)throw new Error(`[${n}] Missing required argument! [newNode]`);if(!t.parentNode)throw new Error(`[${n}] Missing required argument property! [node.parentNode]`);t.parentNode.replaceChild(e,t)})(t,a)}).catch(t=>console.error(`[${n}] ${t.toString()}`))},E=(t=null,r=null,i=null)=>{if(!t)throw new Error(`[${n}] Missing required argument! [node]`);if(!i)throw new Error(`[${n}] Missing required argument! [vnode]`);if(t[o]||(t[o]=new Set),!t[o].has("processed")){if(t[o].add("processed"),i.data.directives.length>1)throw new Error(`[${n}] Node has more than 1 directive! [vnode.data.directives=${JSON.stringify(i.data.directives.map(t=>t.name))}]`);i.data.directives.pop().name===e.directives.inlineSprite&&t[o].add("sprite"),!e._observer&&t.dataset.src&&(t.src=t.dataset.src,delete t.dataset.src),t.dataset.src?v().observe(t):S(t)}};t.directive(e.directives.inline,{bind:E}),t.directive(e.directives.inlineSprite,{bind:E})}}}]).default}));