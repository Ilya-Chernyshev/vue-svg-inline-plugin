!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.VueSvgInlinePlugin=e():t.VueSvgInlinePlugin=e()}(window,(function(){return function(t){var e={};function r(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)r.d(n,i,function(e){return t[e]}.bind(null,i));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="/",r(r.s=0)}([function(t,e,r){"use strict";r.r(e);const n={directives:{inline:"v-svg-inline",inlineSprite:"v-svg-inline-sprite"},attributes:{merge:["class","style"],add:[{name:"focusable",value:!1},{name:"role",value:"presentation"},{name:"tabindex",value:-1}],data:[],remove:["alt","src","data-src"]},xhtml:!1},i="vue-svg-inline-plugin-sprite",o=`${i}-container`,s=/.+\.svg(?:[?#].*)?$/i,a=/<svg(\s+[^>]+)?>([\s\S]+)<\/svg>/i,u=/\s*([:@]?[^\s=]+)[\s=]+(?:"([^"]*)"|'([^']*)')?\s*/g,l=/^[:@]?[a-z](?:[a-z0-9-:]*[a-z0-9])?$/i,c=/^v-/i,d=/\s+/g,f=/[\n\t]+/g,g=[200,204,304];e.default={install:(t=null,e={})=>{for(const t of["directives","attributes"])e[t]=Object.assign({},n[t],e[t]||{});e=Object.assign({},n,e);for(const t in e.directives){if(e.directives[t]=e.directives[t].toString().trim().toLowerCase(),!l.test(e.directives[t]))throw new TypeError(`Option is not valid! [options.directives.${t}="${e.directives[t]}"]`);e.directives[t]=e.directives[t].replace(c,"")}for(const t in e.attributes){if(!Array.isArray(e.attributes[t]))throw new TypeError(`Option is not valid! [options.attributes.${t}=${JSON.stringify(e.attributes[t])}]`);e.attributes[t]="add"===t?e.attributes[t].map(t=>({name:t.name.toString().trim().toLowerCase(),value:t.value.toString().trim()})):e.attributes[t].map(t=>t.toString().trim().toLowerCase())}e.xhtml=!!e.xhtml,e._axios="axios"in window;const r=new Map,p=new Set,h=new IntersectionObserver((t,e)=>{for(const r of t){if(!r.isIntersecting)continue;const t=r.target;x(t),e.unobserve(t)}});let m;const w=()=>m||(m=document.getElementById(o)),v=(t="")=>{if(!t)throw new Error("Missing required argument! [string]");if(!(t=t.toString().trim()).startsWith("<")||!t.endsWith(">"))throw new TypeError(`Argument is not valid! [string="${t}"]`);return t=t.replace(f,""),document.createRange().createContextualFragment(t)},b=(t="")=>{if(!t)throw new Error("Missing required argument! [string]");t=t.toString().trim();const r=new Map;let n;for(u.lastIndex=0;n=u.exec(t);){n.index===u.lastIndex&&u.lastIndex++;const t=(n[1]||"").trim().toLowerCase();if(!t||t.startsWith("<")||t.endsWith(">"))continue;if(!l.test(t))throw new TypeError(`Attribute name is not valid! [attribute="${t}"]`);const i=(n[2]||n[3]||"").trim();r.set(t,i||(e.xhtml?t:""))}return r},y=(t=null,r=null)=>{if(!t)throw new Error("Missing required argument! [file]");if(!r)throw new Error("Missing required argument! [node]");if(!t.path)throw new Error("Missing required argument property! [file.path]");if(t.path=t.path.toString().trim(),!s.test(t.path))throw new TypeError(`Argument property is not valid! [file.path="${t.path}"]`);if(!t.content)throw new Error("Missing required argument property! [file.content]");if(t.content=t.content.toString().trim(),!a.test(t.content))throw new TypeError(`Argument property is not valid! [file.content="${t.content}"]`);if(!r.outerHTML)throw new Error("Missing required argument property! [node.outerHTML]");return r._sprite&&(t.content=t.content.replace(a,(e,r,n)=>{const s=p.has(t.path),a=`${i}-${s?[...p].indexOf(t.path):p.size}`;if(!s){const e=v(`<svg xmlns="http://www.w3.org/2000/svg"><symbol id="${a}"${r}>${n}</symbol></svg>`);(w()||(()=>{if(m)throw new Error("Can not create SVG symbol container node, node already exists!");const t=v(`<svg xmlns="http://www.w3.org/2000/svg" id="${o}" style="display: none !important;"></svg>`);return document.body.appendChild(t),w()})()).appendChild(e.firstChild.firstChild),p.add(t.path)}return`<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><use xlink:href="#${a}" href="#${a}"></use></svg>`})),t.content.replace(a,(t,n,i)=>{const o=r.outerHTML.toString().trim(),s=b(n),a=b(o);n=new Map([...s,...a]);for(const t of e.attributes.merge){const r=s.has(t)?s.get(t).split(d).filter(t=>!!t):[],i=a.has(t)?a.get(t).split(d).filter(t=>!!t):[];if(e.xhtml&&!r.length&&!i.length)continue;const o=[...new Set([].concat(r,i))].join(" ");n.set(t,o)}for(const t of e.attributes.add)if(n.has(t.name)){if(!e.attributes.merge.includes(t.name))throw new Error(`Can not add attribute, attribute already exists. [${t.name}]`);const r=n.has(t.name)?n.get(t.name).split(d).filter(t=>!!t):[],i=t.value.split(d).filter(t=>!!t);if(e.xhtml&&!r.length&&!i.length)continue;const o=[...new Set([].concat(r,i))].join(" ");n.set(t.name,o)}else n.set(t.name,t.value.split(d).filter(t=>!!t).join(" "));for(const t of e.attributes.data){if(!n.has(t))continue;const r=`data-${t}`;if(n.has(r)){if(!e.attributes.merge.includes(r))throw new Error(`Can not transform attribute to data-attribute, data-attribute already exists. [${t}]`);const i=n.has(r)?n.get(r).split(d).filter(t=>!!t):[],o=n.has(t)?n.get(t).split(d).filter(t=>!!t):[];if(e.xhtml&&!i.length&&!o.length)continue;const s=[...new Set([].concat(i,o))].join(" ");n.set(r,s)}else{const e=n.get(t);n.set(r,e.split(d).filter(t=>!!t).join(" "))}e.attributes.remove.includes(t)||e.attributes.remove.push(t)}for(const t of e.attributes.remove)n.has(t)&&n.delete(t);return`<svg${n.size?` ${[...n.keys()].filter(t=>!!t).map(t=>`${t}="${n.get(t)}"`).join(" ")}`:""}>${i}</svg>`})},x=(t=null)=>{if(!t)throw new Error("Missing required argument! [node]");if(!t.dataset.src&&!t.src)throw new Error("Missing required argument property! [node.data-src || node.src]");t.dataset.src&&(t.dataset.src=t.dataset.src.toString().trim()),t.src&&(t.src=t.src.toString().trim()),((t="")=>{if(!t)throw new Error("Missing required argument! [path]");if(t=t.toString().trim(),!s.test(t))throw new TypeError(`Argument is not valid! [path="${t}"]`);return new Promise((n,i)=>{const o={path:t};if(r.has(o.path))return o.content=r.get(o.path),n(o);(e._axios?axios.get:fetch).bind(window)(o.path).then(t=>{if(!g.includes(0|t.status))throw new Error(`Wrong response status! [response.status=${t.status}]`);return e._axios?t.data.toString():t.text()}).then(t=>(o.content=t.trim(),r.set(o.path,o.content),n(o))).catch(i)})})(t.dataset.src||t.src).then(e=>{const r=y(e,t),n=v(r);((t=null,e=null)=>{if(!t)throw new Error("Missing required argument! [node]");if(!e)throw new Error("Missing required argument! [newNode]");if(!t.parentNode)throw new Error("Missing required argument property! [node.parentNode]");t.parentNode.replaceChild(e,t)})(t,n)}).catch(console.error)},S=(t=null,r=null,n=null)=>{if(!t)throw new Error("Missing required argument! [node]");if(!n)throw new Error("Missing required argument! [vnode]");if(!t._processed){if(n.data.directives.length>1)throw new Error(`Node has more than 1 directive! [vnode.data.directives=${JSON.stringify(n.data.directives.map(t=>t.name))}]`);t._sprite=n.data.directives.pop().name===e.directives.inlineSprite,t.dataset.src?h.observe(t):x(t),t._processed=!0}};t.directive(e.directives.inline,{bind:S}),t.directive(e.directives.inlineSprite,{bind:S})}}}]).default}));