!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.VueSvgInlinePlugin=t():e.VueSvgInlinePlugin=t()}(window,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="/",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);
/**
 * @author Oliver Findl
 * @version 1.0.0
 * @license MIT
 */
const n="vue-svg-inline-plugin";const i={directives:{inline:"v-svg-inline",inlineSprite:"v-svg-inline-sprite"},attributes:{merge:["class","style"],add:[{name:"focusable",value:!1},{name:"role",value:"presentation"},{name:"tabindex",value:-1}],data:[],remove:["alt","src","data-src"]},xhtml:!1},s=`${n}-flags`,o=`${n}-sprite`,a=`${o}-observer`,d=/.+\.svg(?:[?#].*)?$/i,u=/<svg(\s+[^>]+)?>([\s\S]+)<\/svg>/i,c=/\s*([:@]?[^\s=]+)[\s=]+(?:"([^"]*)"|'([^']*)')?\s*/g,l=/^[:@]?[a-z](?:[a-z0-9-:]*[a-z0-9])?$/i,f=/^v-/i,g=/\s+/g,p=/[\n\t]+/g,h=new Set([200,304]);t.default={install:(e=null,t={})=>{for(const e of["directives","attributes"])t[e]=Object.assign({},i[e],t[e]||{});t=Object.assign({},i,t);for(const e in t.directives){if(t.directives[e]=t.directives[e].toString().trim().toLowerCase(),!l.test(t.directives[e]))throw new TypeError(`[${n}] Option is not valid! [options.directives.${e}="${t.directives[e]}"]`);t.directives[e]=t.directives[e].replace(f,"")}for(const e in t.attributes){if(!Array.isArray(t.attributes[e]))throw new TypeError(`[${n}] Option is not valid! [options.attributes.${e}=${JSON.stringify(t.attributes[e])}]`);t.attributes[e]="add"===e?t.attributes[e].map(e=>({name:e.name.toString().trim().toLowerCase(),value:e.value.toString().trim()})):t.attributes[e].map(e=>e.toString().trim().toLowerCase()),t.attributes[e]=new Set(t.attributes[e])}if(t.xhtml=!!t.xhtml,t._fetch="fetch"in window,t._axios="axios"in window,!t._fetch&&!t._axios)throw new Error(`[${n}] Feature is not supported by browser! [fetch || axios]`);t._observer="IntersectionObserver"in window,t._observer||console.error(`[${n}] Feature is not supported by browser! Disabling lazy processing of image nodes. [IntersectionObserver]`);const r=new Map,w=new Set,m=new Map,v=()=>m.has("observer")?m.get("observer"):(()=>{if(!t._observer)throw new Error(`[${n}] Feature is not supported by browser! [IntersectionObserver]`);if(m.has("observer"))throw new Error(`[${n}] Can not create image node intersection observer, intersection observer already exists!`);const e=new IntersectionObserver((e,t)=>{for(const r of e){if(!r.isIntersecting)continue;const e=r.target;x(e),t.unobserve(e)}});return m.set("observer",e),e})(),b=()=>m.has("container")?m.get("container"):(()=>{if(m.has("container"))throw new Error(`[${n}] Can not create SVG symbol container node, container node already exists!`);let e=$(`<svg xmlns="http://www.w3.org/2000/svg" id="${a}" style="display: none !important;"></svg>`);return document.body.appendChild(e),m.set("container",e=document.getElementById(a)),e})(),$=(e="")=>{if(!e)throw new Error(`[${n}] Missing required argument! [string]`);if(!(e=e.toString().trim()).startsWith("<")||!e.endsWith(">"))throw new TypeError(`[${n}] Argument is not valid! [string="${e}"]`);return e=e.replace(p,""),document.createRange().createContextualFragment(e)},y=(e="")=>{if(!e)throw new Error(`[${n}] Missing required argument! [string]`);e=e.toString().trim();const r=new Map;let i;for(c.lastIndex=0;i=c.exec(e);){i.index===c.lastIndex&&c.lastIndex++;const e=(i[1]||"").trim().toLowerCase();if(!e||e.startsWith("<")||e.endsWith(">"))continue;if(!l.test(e))throw new TypeError(`[${n}] Attribute name is not valid! [attribute="${e}"]`);const s=(i[2]||i[3]||"").trim();r.set(e,s||(t.xhtml?e:""))}return r},x=(e=null)=>{if(!e)throw new Error(`[${n}] Missing required argument! [node]`);if(!e.dataset.src&&!e.src)throw new Error(`[${n}] Missing required argument property! [node.data-src || node.src]`);e.dataset.src&&(e.dataset.src=e.dataset.src.toString().trim()),e.src&&(e.src=e.src.toString().trim()),((e="")=>{if(!t._fetch&&!t._axios)throw new Error(`[${n}] Feature is not supported by browser! [fetch || axios]`);if(!e)throw new Error(`[${n}] Missing required argument! [path]`);if(e=e.toString().trim(),!d.test(e))throw new TypeError(`[${n}] Argument is not valid! [path="${e}"]`);return new Promise((n,i)=>{const s={path:e};if(r.has(s.path))return s.content=r.get(s.path),n(s);(t._axios?axios.get:fetch).bind(window)(s.path).then(e=>{if(!h.has(0|e.status))throw new Error(`Wrong response status! [response.status=${e.status}]`);return t._axios?e.data.toString():e.text()}).then(e=>(s.content=e.trim(),r.set(s.path,s.content),n(s))).catch(i)})})(e.dataset.src||e.src).then(r=>{const i=((e=null,r=null)=>{if(!e)throw new Error(`[${n}] Missing required argument! [file]`);if(!r)throw new Error(`[${n}] Missing required argument! [node]`);if(!e.path)throw new Error(`[${n}] Missing required argument property! [file.path]`);if(e.path=e.path.toString().trim(),!d.test(e.path))throw new TypeError(`[${n}] Argument property is not valid! [file.path="${e.path}"]`);if(!e.content)throw new Error(`[${n}] Missing required argument property! [file.content]`);if(e.content=e.content.toString().trim(),!u.test(e.content))throw new TypeError(`[${n}] Argument property is not valid! [file.content="${e.content}"]`);if(!r.outerHTML)throw new Error(`[${n}] Missing required argument property! [node.outerHTML]`);return r[s].has("sprite")&&(e.content=e.content.replace(u,(t,r,n)=>{const i=w.has(e.path),s=`${o}-${i?[...w].indexOf(e.path):w.size}`;if(!i){const t=$(`<svg xmlns="http://www.w3.org/2000/svg"><symbol id="${s}"${r}>${n}</symbol></svg>`);b().appendChild(t.firstChild.firstChild),w.add(e.path)}return`<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><use xlink:href="#${s}" href="#${s}"></use></svg>`})),e.content.replace(u,(e,i,s)=>{const o=r.outerHTML.toString().trim(),a=y(i),d=y(o);i=new Map([...a,...d]);const u=new Set(["class"]);for(const e of t.attributes.merge){const r=a.has(e)?a.get(e).split(g).filter(e=>!!e):[],n=d.has(e)?d.get(e).split(g).filter(e=>!!e):[];if(t.xhtml&&!r.length&&!n.length)continue;const s=[...r,...n];i.set(e,(u.has(e)?[...new Set(s)]:s).join(" ").trim())}for(const e of t.attributes.add){let r=e.value.split(g).filter(e=>!!e);if(i.has(e.name)){if(!t.attributes.merge.has(e.name))throw new Error(`[${n}] Can not add attribute, attribute already exists. [${e.name}]`);const s=i.get(e.name).split(g).filter(e=>!!e);if(t.xhtml&&!r.length&&!s.length)continue;r=[...s,...r]}i.set(e.name,(u.has(e.name)?[...new Set(r)]:r).join(" ").trim())}for(const e of t.attributes.data){if(!i.has(e))continue;let r=i.get(e).split(g).filter(e=>!!e);const s=`data-${e}`;if(i.has(s)){if(!t.attributes.merge.has(s))throw new Error(`[${n}] Can not transform attribute to data-attribute, data-attribute already exists. [${e}]`);const o=i.get(s).split(g).filter(e=>!!e);if(t.xhtml&&!r.length&&!o.length)continue;r=[...o,...r]}i.set(s,(u.has(e)?[...new Set(r)]:r).join(" ").trim()),t.attributes.remove.has(e)||t.attributes.remove.add(e)}for(const e of t.attributes.remove)i.has(e)&&i.delete(e);return`<svg${i.size?` ${[...i.keys()].filter(e=>!!e).map(e=>`${e}="${i.get(e)}"`).join(" ")}`:""}>${s}</svg>`})})(r,e),a=$(i);((e=null,t=null)=>{if(!e)throw new Error(`[${n}] Missing required argument! [node]`);if(!t)throw new Error(`[${n}] Missing required argument! [newNode]`);if(!e.parentNode)throw new Error(`[${n}] Missing required argument property! [node.parentNode]`);e.parentNode.replaceChild(t,e)})(e,a)}).catch(e=>console.error(`[${n}] ${e.toString()}`))},S=(e=null,r=null,i=null)=>{if(!e)throw new Error(`[${n}] Missing required argument! [node]`);if(!i)throw new Error(`[${n}] Missing required argument! [vnode]`);if(e[s]||(e[s]=new Set),!e[s].has("processed")){if(e[s].add("processed"),i.data.directives.length>1)throw new Error(`[${n}] Node has more than 1 directive! [vnode.data.directives=${JSON.stringify(i.data.directives.map(e=>e.name))}]`);i.data.directives.pop().name===t.directives.inlineSprite&&e[s].add("sprite"),!t._observer&&e.dataset.src&&(e.src=e.dataset.src,delete e.dataset.src),e.dataset.src?v().observe(e):x(e)}};e.directive(t.directives.inline,{bind:S}),e.directive(t.directives.inlineSprite,{bind:S})}}}]).default}));